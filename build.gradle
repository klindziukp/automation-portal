plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'java'
    id 'jacoco'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'jacoco'

group = 'com.dandelion'
version = '0.0.3'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    maven { url "http://repo1.maven.org/maven2/" }
}

dependencyManagement {
    imports {
        mavenBom 'org.testcontainers:testcontainers-bom:1.11.2'
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.6'
    annotationProcessor 'org.projectlombok:lombok:1.18.6'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'

    compile 'org.junit.platform:junit-platform-commons:1.4.2'
    compile 'com.github.ulisesbocchio:jasypt-spring-boot-starter:2.1.1'
    compile 'com.jupiter-tools:spring-test-mongo:0.13'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testCompile "org.testcontainers:junit-jupiter:1.11.2"

    testCompile 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.2.0'
    testCompile "org.testcontainers:testcontainers:1.11.2"
    testCompile 'org.awaitility:awaitility:3.0.0'
    testCompile 'io.rest-assured:rest-assured:3.3.0'
    testCompile 'io.rest-assured:spring-mock-mvc:3.3.0'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.4.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/model/**',
                    '**/support/**',
                    '**/*AutomationPortalApplication*.*'
            ])
        })
    }
}

check.dependsOn jacocoTestReport
