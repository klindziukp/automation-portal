/*
## PLUGINS
---
Allure Jenkins plugin
Build Pipeline plugin
Build With Parameters plugin
Build Discard plugin
Copy Artifact plugin
Delivery Pipeline plugin
Email Extension plugin
Pipeline plugin
Simple Theme plugin
Test Results Analyzer plugin

## JENKINS SCHEME
---
http://afonsof.com/jenkins-material-theme/dist/material-light.css
*/

pipeline {

    agent any

    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
    }

    stages {
    stage('Polling Scm') {
                steps {
                    echo 'Polling Scm changes...'
                    git url: 'https://github.com/klindziukp/automation-portal.git', branch: 'AP-11-migrate-to-SQL'
                }
            }
    stage('Compile') {
    echo 'Compiling...'
                steps {
                    gradlew('clean', 'classes')
                }
            }
    stage('Unit Tests') {
    echo 'Perform unit testing...'
                steps {
                    gradlew('test -i')
                }
            }
    stage('Static code analysis') {
    echo 'Perform static code analysis...'
     environment {
                   SONAR_LOGIN = credentials('SONARCLOUD_TOKEN')
                 }
                 stage('Code Analysis') {
                      steps {
                          gradlew('sonarqube')
                      }
                    }
                }
            }
     stage('Assemble') {
     echo 'Assembling build analysis...'
                 steps {
                     gradlew('assemble')
                     stash includes: '**/build/libs/*.jar', name: 'automation-portal'
                 }
             }
      stage('Archive artifacts') {
      echo 'Archive artifacts...'
            steps {
                archiveArtifacts artifacts: '**/build/libs/*.jar', fingerprint: true, onlyIfSuccessful: true
            }
        }
    }

def gradlew(String... args) {
    sh "./gradlew ${args.join(' ')} -s"
}